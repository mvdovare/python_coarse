# Пользователь вводит вещественное число, 
# округлить его до 0, 2, 5 цифр после запятой

num_1 = float(input('Please enter number 1 - '))

print(round(num_1,0), round(num_1,2), round(num_1,5))

#################################################

# Дан список из N элементов
# вывести его последний элемент, 
# в этом задании нельзя использовать отрицательный индекс

li = [2,3,10,22]
print(li[len(li)-1])

#################################################

# Пользователь вводит a, b, c
# после вводит формулу, в которой может использовать a, b, c
# Вывести результат формулы.
# В этом задании можно использовать односимвольные именя для переменных.

a = int(input('Please enter number 1 - '))
b = int(input('Please enter number 2 - '))
c = int(input('Please enter number 3 - '))

f = (input('Please enter formula - '))

#################################################

# Дан список из N элементов, пользовтель вводит 2 числа
# вывести часть списка, индекс начала которого равен первому числу,
# а конец равен индексу второго введенного числа.

a = int(input('Please enter number 1 - '))
b = int(input('Please enter number 2 - '))

la = [2,3,10,22,56,76,78]
print(la[a:b+1])

# задание немного подебильному составлено.
# можно подумать так, что надо поиском найти на каком индексе находится второе введенное число
# и взять этот индекс как конец среза

#################################################

# Пользователь вводит строку,
# удалить все повторяющиеся символы 
# и вывести список с неповторяющимеся символами

stroka = input('Please enter a string - ')



#################################################

# Даны два множества,
# найти их пересечение и вывести разность первого и последнего
# элементов в пересечении

set_1 = set([1,2,3,4,5,6,7])
set_2 = set([9,8,6,5,4])

set_res = set_1.intersection(set_2)
list_res = list(set_res)

print(list_res)
print(list_res[0] - list_res[-1])


#################################################

# Даны два списка из N элементов каждый
# создать из двух списков один, 
# который состоит из элементов первого и второго
# удалить из него повторяющиеся

list_1 = [1,2,3,4,5,6,7]
list_2 = [9,8,6,5,4]

set_1 = set(list_1)
set_2 = set(list_2)

set_1.update(set_2)

print(set_1)


#################################################

# Дан кортеж из N элементов и список из N элементов
# вывести элементы которые есть как в кортеже так и в списке

cort = tuple([1,2,3,4,5,6,7])
list_2 = [9,8,6,5,4]

res = set(cort).intersection(set(list_2))

print(res)

#################################################



#################################################



#################################################